# -*- coding: utf-8 -*-
"""Handwritten_Digit_Generation_Web_App.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ElKEvJI0fiQGLK6DPhKE3jgegBKqRRzf
"""

from flask import Flask, render_template, request
import torch
from torchvision import datasets, transforms
import matplotlib.pyplot as plt
import io
import base64
import random

app = Flask(__name__)

transform = transforms.ToTensor()

mnsit_data = datasets.MNIST(root='./data', train=True, download=True, transform=transform)

def tensor_to_base64(img_tensor):
  img = img_tensor.squeeze().numpy()
  plt.figure(figsize=(1, 1))
  plt.axis('off')
  plt.imshow(img, cmap='gray')
  buf = io.BytesIO()
  plt.savefig(buf, format='png', bbox_inches='tight', pad_inches=0)
  plt.close()
  buf.seek(0)
  return base64.b64encode(buf.read()).decode('utf-8')

@app.route('/', methods=['GET', 'POST'])
def index():
  images = []
  selected_digit = None

  if request.method == 'POST':
    selected_digit = int(request.form['digit'])

    matching_indices = [i for i, (_, label) in enumerate(mnist_data) if label == selected_digit]
    selected_indices = random.sample(matching_indices, 5)

    for idx in selected_indices:
      img_tensor, _ = mnist_data[idx]
      img_b64 = tensor_to_base64(img_tensor)
      images.append(img_b64)

  return render_template('index.html', images=images, selected_digit=selected_digit)

  if __name__ == '__main__':
    app.run(debug=True)